"use strict";
// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file workspaces.proto (package scalekit.v1.workspaces, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetWorkspaceResponse = exports.GetCurrentWorkspaceRequest = exports.GetWorkspaceRequest = exports.UpdateWorkspaceResponse = exports.UpdateCurrentWorkspaceRequest = exports.UpdateWorkspaceRequest = exports.CreateWorkspaceResponse = exports.CreateWorkspaceRequest = exports.UpdateWorkspace = exports.CreateWorkspace = exports.Workspace = exports.YesNo = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const commons_pb_js_1 = require("./commons_pb.js");
/**
 * @generated from enum scalekit.v1.workspaces.YesNo
 */
var YesNo;
(function (YesNo) {
    /**
     * @generated from enum value: YES = 0;
     */
    YesNo[YesNo["YES"] = 0] = "YES";
    /**
     * @generated from enum value: NO = 1;
     */
    YesNo[YesNo["NO"] = 1] = "NO";
})(YesNo || (exports.YesNo = YesNo = {}));
// Retrieve enum metadata with: proto3.getEnumType(YesNo)
protobuf_1.proto3.util.setEnumType(YesNo, "scalekit.v1.workspaces.YesNo", [
    { no: 0, name: "YES" },
    { no: 1, name: "NO" },
]);
/**
 * @generated from message scalekit.v1.workspaces.Workspace
 */
class Workspace extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        /**
         * @generated from field: string display_name = 4;
         */
        this.displayName = "";
        /**
         * @generated from field: scalekit.v1.commons.RegionCode region_code = 6;
         */
        this.regionCode = commons_pb_js_1.RegionCode.REGION_CODE_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Workspace().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Workspace().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Workspace().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Workspace, a, b);
    }
}
exports.Workspace = Workspace;
Workspace.runtime = protobuf_1.proto3;
Workspace.typeName = "scalekit.v1.workspaces.Workspace";
Workspace.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: protobuf_1.Timestamp },
    { no: 3, name: "update_time", kind: "message", T: protobuf_1.Timestamp },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "region_code", kind: "enum", T: protobuf_1.proto3.getEnumType(commons_pb_js_1.RegionCode) },
]);
/**
 * @generated from message scalekit.v1.workspaces.CreateWorkspace
 */
class CreateWorkspace extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string email = 1;
         */
        this.email = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateWorkspace().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateWorkspace().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateWorkspace().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreateWorkspace, a, b);
    }
}
exports.CreateWorkspace = CreateWorkspace;
CreateWorkspace.runtime = protobuf_1.proto3;
CreateWorkspace.typeName = "scalekit.v1.workspaces.CreateWorkspace";
CreateWorkspace.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "company", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "send_welcome_email", kind: "enum", T: protobuf_1.proto3.getEnumType(YesNo), opt: true },
]);
/**
 * @generated from message scalekit.v1.workspaces.UpdateWorkspace
 */
class UpdateWorkspace extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string display_name = 1;
         */
        this.displayName = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateWorkspace().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateWorkspace().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateWorkspace().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(UpdateWorkspace, a, b);
    }
}
exports.UpdateWorkspace = UpdateWorkspace;
UpdateWorkspace.runtime = protobuf_1.proto3;
UpdateWorkspace.typeName = "scalekit.v1.workspaces.UpdateWorkspace";
UpdateWorkspace.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.workspaces.CreateWorkspaceRequest
 */
class CreateWorkspaceRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateWorkspaceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateWorkspaceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateWorkspaceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreateWorkspaceRequest, a, b);
    }
}
exports.CreateWorkspaceRequest = CreateWorkspaceRequest;
CreateWorkspaceRequest.runtime = protobuf_1.proto3;
CreateWorkspaceRequest.typeName = "scalekit.v1.workspaces.CreateWorkspaceRequest";
CreateWorkspaceRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "workspace", kind: "message", T: CreateWorkspace },
]);
/**
 * @generated from message scalekit.v1.workspaces.CreateWorkspaceResponse
 */
class CreateWorkspaceResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string link = 2;
         */
        this.link = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateWorkspaceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateWorkspaceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateWorkspaceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreateWorkspaceResponse, a, b);
    }
}
exports.CreateWorkspaceResponse = CreateWorkspaceResponse;
CreateWorkspaceResponse.runtime = protobuf_1.proto3;
CreateWorkspaceResponse.typeName = "scalekit.v1.workspaces.CreateWorkspaceResponse";
CreateWorkspaceResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "workspace", kind: "message", T: Workspace },
    { no: 2, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.workspaces.UpdateWorkspaceRequest
 */
class UpdateWorkspaceRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateWorkspaceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateWorkspaceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateWorkspaceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(UpdateWorkspaceRequest, a, b);
    }
}
exports.UpdateWorkspaceRequest = UpdateWorkspaceRequest;
UpdateWorkspaceRequest.runtime = protobuf_1.proto3;
UpdateWorkspaceRequest.typeName = "scalekit.v1.workspaces.UpdateWorkspaceRequest";
UpdateWorkspaceRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "workspace", kind: "message", T: UpdateWorkspace },
]);
/**
 * @generated from message scalekit.v1.workspaces.UpdateCurrentWorkspaceRequest
 */
class UpdateCurrentWorkspaceRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateCurrentWorkspaceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateCurrentWorkspaceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateCurrentWorkspaceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(UpdateCurrentWorkspaceRequest, a, b);
    }
}
exports.UpdateCurrentWorkspaceRequest = UpdateCurrentWorkspaceRequest;
UpdateCurrentWorkspaceRequest.runtime = protobuf_1.proto3;
UpdateCurrentWorkspaceRequest.typeName = "scalekit.v1.workspaces.UpdateCurrentWorkspaceRequest";
UpdateCurrentWorkspaceRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "workspace", kind: "message", T: UpdateWorkspace },
]);
/**
 * @generated from message scalekit.v1.workspaces.UpdateWorkspaceResponse
 */
class UpdateWorkspaceResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateWorkspaceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateWorkspaceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateWorkspaceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(UpdateWorkspaceResponse, a, b);
    }
}
exports.UpdateWorkspaceResponse = UpdateWorkspaceResponse;
UpdateWorkspaceResponse.runtime = protobuf_1.proto3;
UpdateWorkspaceResponse.typeName = "scalekit.v1.workspaces.UpdateWorkspaceResponse";
UpdateWorkspaceResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "workspace", kind: "message", T: Workspace },
]);
/**
 * @generated from message scalekit.v1.workspaces.GetWorkspaceRequest
 */
class GetWorkspaceRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetWorkspaceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetWorkspaceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetWorkspaceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetWorkspaceRequest, a, b);
    }
}
exports.GetWorkspaceRequest = GetWorkspaceRequest;
GetWorkspaceRequest.runtime = protobuf_1.proto3;
GetWorkspaceRequest.typeName = "scalekit.v1.workspaces.GetWorkspaceRequest";
GetWorkspaceRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.workspaces.GetCurrentWorkspaceRequest
 */
class GetCurrentWorkspaceRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetCurrentWorkspaceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetCurrentWorkspaceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetCurrentWorkspaceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetCurrentWorkspaceRequest, a, b);
    }
}
exports.GetCurrentWorkspaceRequest = GetCurrentWorkspaceRequest;
GetCurrentWorkspaceRequest.runtime = protobuf_1.proto3;
GetCurrentWorkspaceRequest.typeName = "scalekit.v1.workspaces.GetCurrentWorkspaceRequest";
GetCurrentWorkspaceRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message scalekit.v1.workspaces.GetWorkspaceResponse
 */
class GetWorkspaceResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetWorkspaceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetWorkspaceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetWorkspaceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetWorkspaceResponse, a, b);
    }
}
exports.GetWorkspaceResponse = GetWorkspaceResponse;
GetWorkspaceResponse.runtime = protobuf_1.proto3;
GetWorkspaceResponse.typeName = "scalekit.v1.workspaces.GetWorkspaceResponse";
GetWorkspaceResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "workspace", kind: "message", T: Workspace },
]);
//# sourceMappingURL=workspaces_pb.js.map