// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file environments.proto (package scalekit.v1.environments, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { EnvironmentType, RegionCode } from "./commons_pb.js";

/**
 * @generated from message scalekit.v1.environments.Environment
 */
export class Environment extends Message<Environment> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: string domain = 5;
   */
  domain = "";

  /**
   * @generated from field: scalekit.v1.commons.RegionCode region_code = 6;
   */
  regionCode = RegionCode.REGION_CODE_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.commons.EnvironmentType type = 7;
   */
  type = EnvironmentType.ENVIRONMENT_TYPE_UNSPECIFIED;

  constructor(data?: PartialMessage<Environment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.Environment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
    { no: 3, name: "update_time", kind: "message", T: Timestamp },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "region_code", kind: "enum", T: proto3.getEnumType(RegionCode) },
    { no: 7, name: "type", kind: "enum", T: proto3.getEnumType(EnvironmentType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Environment {
    return new Environment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Environment {
    return new Environment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Environment {
    return new Environment().fromJsonString(jsonString, options);
  }

  static equals(a: Environment | PlainMessage<Environment> | undefined, b: Environment | PlainMessage<Environment> | undefined): boolean {
    return proto3.util.equals(Environment, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.CreateEnvironment
 */
export class CreateEnvironment extends Message<CreateEnvironment> {
  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: optional scalekit.v1.commons.RegionCode region_code = 6;
   */
  regionCode?: RegionCode;

  /**
   * @generated from field: optional scalekit.v1.commons.EnvironmentType type = 7;
   */
  type?: EnvironmentType;

  constructor(data?: PartialMessage<CreateEnvironment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.CreateEnvironment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "region_code", kind: "enum", T: proto3.getEnumType(RegionCode), opt: true },
    { no: 7, name: "type", kind: "enum", T: proto3.getEnumType(EnvironmentType), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEnvironment {
    return new CreateEnvironment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEnvironment {
    return new CreateEnvironment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEnvironment {
    return new CreateEnvironment().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEnvironment | PlainMessage<CreateEnvironment> | undefined, b: CreateEnvironment | PlainMessage<CreateEnvironment> | undefined): boolean {
    return proto3.util.equals(CreateEnvironment, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.UpdateEnvironment
 */
export class UpdateEnvironment extends Message<UpdateEnvironment> {
  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  constructor(data?: PartialMessage<UpdateEnvironment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.UpdateEnvironment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironment {
    return new UpdateEnvironment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironment {
    return new UpdateEnvironment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironment {
    return new UpdateEnvironment().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironment | PlainMessage<UpdateEnvironment> | undefined, b: UpdateEnvironment | PlainMessage<UpdateEnvironment> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironment, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.UpdateEnvironmentDomain
 */
export class UpdateEnvironmentDomain extends Message<UpdateEnvironmentDomain> {
  /**
   * @generated from field: optional string domain = 5;
   */
  domain?: string;

  constructor(data?: PartialMessage<UpdateEnvironmentDomain>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.UpdateEnvironmentDomain";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironmentDomain {
    return new UpdateEnvironmentDomain().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironmentDomain {
    return new UpdateEnvironmentDomain().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironmentDomain {
    return new UpdateEnvironmentDomain().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironmentDomain | PlainMessage<UpdateEnvironmentDomain> | undefined, b: UpdateEnvironmentDomain | PlainMessage<UpdateEnvironmentDomain> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironmentDomain, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.CreateEnvironmentRequest
 */
export class CreateEnvironmentRequest extends Message<CreateEnvironmentRequest> {
  /**
   * @generated from field: scalekit.v1.environments.CreateEnvironment environment = 1;
   */
  environment?: CreateEnvironment;

  constructor(data?: PartialMessage<CreateEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.CreateEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment", kind: "message", T: CreateEnvironment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEnvironmentRequest {
    return new CreateEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEnvironmentRequest {
    return new CreateEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEnvironmentRequest {
    return new CreateEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEnvironmentRequest | PlainMessage<CreateEnvironmentRequest> | undefined, b: CreateEnvironmentRequest | PlainMessage<CreateEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(CreateEnvironmentRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.CreateEnvironmentResponse
 */
export class CreateEnvironmentResponse extends Message<CreateEnvironmentResponse> {
  /**
   * @generated from field: scalekit.v1.environments.Environment environment = 1;
   */
  environment?: Environment;

  constructor(data?: PartialMessage<CreateEnvironmentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.CreateEnvironmentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment", kind: "message", T: Environment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEnvironmentResponse {
    return new CreateEnvironmentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEnvironmentResponse {
    return new CreateEnvironmentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEnvironmentResponse {
    return new CreateEnvironmentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEnvironmentResponse | PlainMessage<CreateEnvironmentResponse> | undefined, b: CreateEnvironmentResponse | PlainMessage<CreateEnvironmentResponse> | undefined): boolean {
    return proto3.util.equals(CreateEnvironmentResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.UpdateEnvironmentRequest
 */
export class UpdateEnvironmentRequest extends Message<UpdateEnvironmentRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.environments.UpdateEnvironment environment = 2;
   */
  environment?: UpdateEnvironment;

  constructor(data?: PartialMessage<UpdateEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.UpdateEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment", kind: "message", T: UpdateEnvironment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironmentRequest {
    return new UpdateEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironmentRequest {
    return new UpdateEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironmentRequest {
    return new UpdateEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironmentRequest | PlainMessage<UpdateEnvironmentRequest> | undefined, b: UpdateEnvironmentRequest | PlainMessage<UpdateEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironmentRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.UpdateEnvironmentDomainRequest
 */
export class UpdateEnvironmentDomainRequest extends Message<UpdateEnvironmentDomainRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.environments.UpdateEnvironmentDomain environment = 2;
   */
  environment?: UpdateEnvironmentDomain;

  constructor(data?: PartialMessage<UpdateEnvironmentDomainRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.UpdateEnvironmentDomainRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment", kind: "message", T: UpdateEnvironmentDomain },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironmentDomainRequest {
    return new UpdateEnvironmentDomainRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironmentDomainRequest {
    return new UpdateEnvironmentDomainRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironmentDomainRequest {
    return new UpdateEnvironmentDomainRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironmentDomainRequest | PlainMessage<UpdateEnvironmentDomainRequest> | undefined, b: UpdateEnvironmentDomainRequest | PlainMessage<UpdateEnvironmentDomainRequest> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironmentDomainRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.UpdateEnvironmentResponse
 */
export class UpdateEnvironmentResponse extends Message<UpdateEnvironmentResponse> {
  /**
   * @generated from field: scalekit.v1.environments.Environment environment = 1;
   */
  environment?: Environment;

  constructor(data?: PartialMessage<UpdateEnvironmentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.UpdateEnvironmentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment", kind: "message", T: Environment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironmentResponse {
    return new UpdateEnvironmentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironmentResponse {
    return new UpdateEnvironmentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironmentResponse {
    return new UpdateEnvironmentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironmentResponse | PlainMessage<UpdateEnvironmentResponse> | undefined, b: UpdateEnvironmentResponse | PlainMessage<UpdateEnvironmentResponse> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironmentResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.GetEnvironmentRequest
 */
export class GetEnvironmentRequest extends Message<GetEnvironmentRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.GetEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEnvironmentRequest {
    return new GetEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEnvironmentRequest {
    return new GetEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEnvironmentRequest {
    return new GetEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetEnvironmentRequest | PlainMessage<GetEnvironmentRequest> | undefined, b: GetEnvironmentRequest | PlainMessage<GetEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(GetEnvironmentRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.GetEnvironmentResponse
 */
export class GetEnvironmentResponse extends Message<GetEnvironmentResponse> {
  /**
   * @generated from field: scalekit.v1.environments.Environment environment = 1;
   */
  environment?: Environment;

  constructor(data?: PartialMessage<GetEnvironmentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.GetEnvironmentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment", kind: "message", T: Environment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEnvironmentResponse {
    return new GetEnvironmentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEnvironmentResponse {
    return new GetEnvironmentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEnvironmentResponse {
    return new GetEnvironmentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetEnvironmentResponse | PlainMessage<GetEnvironmentResponse> | undefined, b: GetEnvironmentResponse | PlainMessage<GetEnvironmentResponse> | undefined): boolean {
    return proto3.util.equals(GetEnvironmentResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.ListEnvironmentsRequest
 */
export class ListEnvironmentsRequest extends Message<ListEnvironmentsRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListEnvironmentsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.ListEnvironmentsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEnvironmentsRequest {
    return new ListEnvironmentsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEnvironmentsRequest {
    return new ListEnvironmentsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEnvironmentsRequest {
    return new ListEnvironmentsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEnvironmentsRequest | PlainMessage<ListEnvironmentsRequest> | undefined, b: ListEnvironmentsRequest | PlainMessage<ListEnvironmentsRequest> | undefined): boolean {
    return proto3.util.equals(ListEnvironmentsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.ListEnvironmentsResponse
 */
export class ListEnvironmentsResponse extends Message<ListEnvironmentsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: repeated scalekit.v1.environments.Environment environments = 3;
   */
  environments: Environment[] = [];

  constructor(data?: PartialMessage<ListEnvironmentsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.ListEnvironmentsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "environments", kind: "message", T: Environment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEnvironmentsResponse {
    return new ListEnvironmentsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEnvironmentsResponse {
    return new ListEnvironmentsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEnvironmentsResponse {
    return new ListEnvironmentsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEnvironmentsResponse | PlainMessage<ListEnvironmentsResponse> | undefined, b: ListEnvironmentsResponse | PlainMessage<ListEnvironmentsResponse> | undefined): boolean {
    return proto3.util.equals(ListEnvironmentsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.environments.DeleteEnvironmentRequest
 */
export class DeleteEnvironmentRequest extends Message<DeleteEnvironmentRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.environments.DeleteEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEnvironmentRequest {
    return new DeleteEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEnvironmentRequest {
    return new DeleteEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEnvironmentRequest {
    return new DeleteEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEnvironmentRequest | PlainMessage<DeleteEnvironmentRequest> | undefined, b: DeleteEnvironmentRequest | PlainMessage<DeleteEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(DeleteEnvironmentRequest, a, b);
  }
}

