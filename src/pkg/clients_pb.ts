// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file clients.proto (package scalekit.v1.clients, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.clients.ClientSecretStatus
 */
export enum ClientSecretStatus {
  /**
   * @generated from enum value: ACTIVE = 0;
   */
  ACTIVE = 0,

  /**
   * @generated from enum value: INACTIVE = 1;
   */
  INACTIVE = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(ClientSecretStatus)
proto3.util.setEnumType(ClientSecretStatus, "scalekit.v1.clients.ClientSecretStatus", [
  { no: 0, name: "ACTIVE" },
  { no: 1, name: "INACTIVE" },
]);

/**
 * @generated from message scalekit.v1.clients.GetClientRequest
 */
export class GetClientRequest extends Message<GetClientRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  constructor(data?: PartialMessage<GetClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.GetClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClientRequest {
    return new GetClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClientRequest {
    return new GetClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClientRequest {
    return new GetClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetClientRequest | PlainMessage<GetClientRequest> | undefined, b: GetClientRequest | PlainMessage<GetClientRequest> | undefined): boolean {
    return proto3.util.equals(GetClientRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.GetClientResponse
 */
export class GetClientResponse extends Message<GetClientResponse> {
  /**
   * @generated from field: scalekit.v1.clients.Client client = 1;
   */
  client?: Client;

  constructor(data?: PartialMessage<GetClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.GetClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client", kind: "message", T: Client },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClientResponse {
    return new GetClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClientResponse {
    return new GetClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClientResponse {
    return new GetClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetClientResponse | PlainMessage<GetClientResponse> | undefined, b: GetClientResponse | PlainMessage<GetClientResponse> | undefined): boolean {
    return proto3.util.equals(GetClientResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.ListClientsRequest
 */
export class ListClientsRequest extends Message<ListClientsRequest> {
  constructor(data?: PartialMessage<ListClientsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.ListClientsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListClientsRequest {
    return new ListClientsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListClientsRequest {
    return new ListClientsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListClientsRequest {
    return new ListClientsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListClientsRequest | PlainMessage<ListClientsRequest> | undefined, b: ListClientsRequest | PlainMessage<ListClientsRequest> | undefined): boolean {
    return proto3.util.equals(ListClientsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.ListClientsResponse
 */
export class ListClientsResponse extends Message<ListClientsResponse> {
  /**
   * @generated from field: uint32 total_size = 1;
   */
  totalSize = 0;

  /**
   * @generated from field: repeated scalekit.v1.clients.Client clients = 2;
   */
  clients: Client[] = [];

  constructor(data?: PartialMessage<ListClientsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.ListClientsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "clients", kind: "message", T: Client, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListClientsResponse {
    return new ListClientsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListClientsResponse {
    return new ListClientsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListClientsResponse {
    return new ListClientsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListClientsResponse | PlainMessage<ListClientsResponse> | undefined, b: ListClientsResponse | PlainMessage<ListClientsResponse> | undefined): boolean {
    return proto3.util.equals(ListClientsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.UpdateClientRequest
 */
export class UpdateClientRequest extends Message<UpdateClientRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: scalekit.v1.clients.UpdateClient client = 2;
   */
  client?: UpdateClient;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 3;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<UpdateClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.UpdateClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client", kind: "message", T: UpdateClient },
    { no: 3, name: "mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientRequest {
    return new UpdateClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientRequest {
    return new UpdateClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientRequest {
    return new UpdateClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClientRequest | PlainMessage<UpdateClientRequest> | undefined, b: UpdateClientRequest | PlainMessage<UpdateClientRequest> | undefined): boolean {
    return proto3.util.equals(UpdateClientRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.UpdateClient
 */
export class UpdateClient extends Message<UpdateClient> {
  /**
   * @generated from field: repeated string redirect_uris = 2;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: optional string default_redirect_uri = 3;
   */
  defaultRedirectUri?: string;

  constructor(data?: PartialMessage<UpdateClient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.UpdateClient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "default_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClient {
    return new UpdateClient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClient {
    return new UpdateClient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClient {
    return new UpdateClient().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClient | PlainMessage<UpdateClient> | undefined, b: UpdateClient | PlainMessage<UpdateClient> | undefined): boolean {
    return proto3.util.equals(UpdateClient, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.UpdateClientResponse
 */
export class UpdateClientResponse extends Message<UpdateClientResponse> {
  /**
   * @generated from field: scalekit.v1.clients.Client client = 1;
   */
  client?: Client;

  constructor(data?: PartialMessage<UpdateClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.UpdateClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client", kind: "message", T: Client },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientResponse {
    return new UpdateClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientResponse {
    return new UpdateClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientResponse {
    return new UpdateClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClientResponse | PlainMessage<UpdateClientResponse> | undefined, b: UpdateClientResponse | PlainMessage<UpdateClientResponse> | undefined): boolean {
    return proto3.util.equals(UpdateClientResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.CreateClientSecretRequest
 */
export class CreateClientSecretRequest extends Message<CreateClientSecretRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  constructor(data?: PartialMessage<CreateClientSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.CreateClientSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateClientSecretRequest {
    return new CreateClientSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateClientSecretRequest {
    return new CreateClientSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateClientSecretRequest {
    return new CreateClientSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateClientSecretRequest | PlainMessage<CreateClientSecretRequest> | undefined, b: CreateClientSecretRequest | PlainMessage<CreateClientSecretRequest> | undefined): boolean {
    return proto3.util.equals(CreateClientSecretRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.CreateClientSecretResponse
 */
export class CreateClientSecretResponse extends Message<CreateClientSecretResponse> {
  /**
   * @generated from field: string plain_secret = 1;
   */
  plainSecret = "";

  /**
   * @generated from field: scalekit.v1.clients.ClientSecret secret = 2;
   */
  secret?: ClientSecret;

  constructor(data?: PartialMessage<CreateClientSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.CreateClientSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "plain_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "secret", kind: "message", T: ClientSecret },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateClientSecretResponse {
    return new CreateClientSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateClientSecretResponse {
    return new CreateClientSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateClientSecretResponse {
    return new CreateClientSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateClientSecretResponse | PlainMessage<CreateClientSecretResponse> | undefined, b: CreateClientSecretResponse | PlainMessage<CreateClientSecretResponse> | undefined): boolean {
    return proto3.util.equals(CreateClientSecretResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.UpdateClientSecretRequest
 */
export class UpdateClientSecretRequest extends Message<UpdateClientSecretRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string secret_id = 2;
   */
  secretId = "";

  /**
   * @generated from field: scalekit.v1.clients.UpdateClientSecret secret = 3;
   */
  secret?: UpdateClientSecret;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 4;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<UpdateClientSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.UpdateClientSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "secret_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "secret", kind: "message", T: UpdateClientSecret },
    { no: 4, name: "mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientSecretRequest {
    return new UpdateClientSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientSecretRequest {
    return new UpdateClientSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientSecretRequest {
    return new UpdateClientSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClientSecretRequest | PlainMessage<UpdateClientSecretRequest> | undefined, b: UpdateClientSecretRequest | PlainMessage<UpdateClientSecretRequest> | undefined): boolean {
    return proto3.util.equals(UpdateClientSecretRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.UpdateClientSecret
 */
export class UpdateClientSecret extends Message<UpdateClientSecret> {
  /**
   * @generated from field: scalekit.v1.clients.ClientSecretStatus status = 1;
   */
  status = ClientSecretStatus.ACTIVE;

  constructor(data?: PartialMessage<UpdateClientSecret>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.UpdateClientSecret";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(ClientSecretStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientSecret {
    return new UpdateClientSecret().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientSecret {
    return new UpdateClientSecret().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientSecret {
    return new UpdateClientSecret().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClientSecret | PlainMessage<UpdateClientSecret> | undefined, b: UpdateClientSecret | PlainMessage<UpdateClientSecret> | undefined): boolean {
    return proto3.util.equals(UpdateClientSecret, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.UpdateClientSecretResponse
 */
export class UpdateClientSecretResponse extends Message<UpdateClientSecretResponse> {
  /**
   * @generated from field: scalekit.v1.clients.ClientSecret secret = 1;
   */
  secret?: ClientSecret;

  constructor(data?: PartialMessage<UpdateClientSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.UpdateClientSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "secret", kind: "message", T: ClientSecret },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientSecretResponse {
    return new UpdateClientSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientSecretResponse {
    return new UpdateClientSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientSecretResponse {
    return new UpdateClientSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClientSecretResponse | PlainMessage<UpdateClientSecretResponse> | undefined, b: UpdateClientSecretResponse | PlainMessage<UpdateClientSecretResponse> | undefined): boolean {
    return proto3.util.equals(UpdateClientSecretResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.DeleteClientSecretRequest
 */
export class DeleteClientSecretRequest extends Message<DeleteClientSecretRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string secret_id = 2;
   */
  secretId = "";

  constructor(data?: PartialMessage<DeleteClientSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.DeleteClientSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "secret_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteClientSecretRequest {
    return new DeleteClientSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteClientSecretRequest {
    return new DeleteClientSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteClientSecretRequest {
    return new DeleteClientSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteClientSecretRequest | PlainMessage<DeleteClientSecretRequest> | undefined, b: DeleteClientSecretRequest | PlainMessage<DeleteClientSecretRequest> | undefined): boolean {
    return proto3.util.equals(DeleteClientSecretRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.Client
 */
export class Client extends Message<Client> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string keyId = 2;
   */
  keyId = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * @generated from field: repeated string redirect_uris = 5;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: string default_redirect_uri = 6;
   */
  defaultRedirectUri = "";

  /**
   * @generated from field: repeated scalekit.v1.clients.ClientSecret secrets = 7;
   */
  secrets: ClientSecret[] = [];

  constructor(data?: PartialMessage<Client>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.Client";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "keyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "create_time", kind: "message", T: Timestamp },
    { no: 4, name: "update_time", kind: "message", T: Timestamp },
    { no: 5, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "default_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "secrets", kind: "message", T: ClientSecret, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Client {
    return new Client().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Client {
    return new Client().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Client {
    return new Client().fromJsonString(jsonString, options);
  }

  static equals(a: Client | PlainMessage<Client> | undefined, b: Client | PlainMessage<Client> | undefined): boolean {
    return proto3.util.equals(Client, a, b);
  }
}

/**
 * @generated from message scalekit.v1.clients.ClientSecret
 */
export class ClientSecret extends Message<ClientSecret> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * @generated from field: string secret_suffix = 4;
   */
  secretSuffix = "";

  /**
   * @generated from field: optional string created_by = 5;
   */
  createdBy?: string;

  /**
   * @generated from field: scalekit.v1.clients.ClientSecretStatus status = 6;
   */
  status = ClientSecretStatus.ACTIVE;

  /**
   * @generated from field: google.protobuf.Timestamp expire_time = 7;
   */
  expireTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_used_time = 8;
   */
  lastUsedTime?: Timestamp;

  constructor(data?: PartialMessage<ClientSecret>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.clients.ClientSecret";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
    { no: 3, name: "update_time", kind: "message", T: Timestamp },
    { no: 4, name: "secret_suffix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_by", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(ClientSecretStatus) },
    { no: 7, name: "expire_time", kind: "message", T: Timestamp },
    { no: 8, name: "last_used_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientSecret {
    return new ClientSecret().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientSecret {
    return new ClientSecret().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientSecret {
    return new ClientSecret().fromJsonString(jsonString, options);
  }

  static equals(a: ClientSecret | PlainMessage<ClientSecret> | undefined, b: ClientSecret | PlainMessage<ClientSecret> | undefined): boolean {
    return proto3.util.equals(ClientSecret, a, b);
  }
}

