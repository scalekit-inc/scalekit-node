// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file members.proto (package scalekit.v1.members, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.members.MemberRole
 */
export enum MemberRole {
  /**
   * @generated from enum value: MEMBER_ROLE_UNSPECIFIED = 0;
   */
  MEMBER_ROLE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ADMIN = 1;
   */
  ADMIN = 1,

  /**
   * @generated from enum value: USER = 2;
   */
  USER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(MemberRole)
proto3.util.setEnumType(MemberRole, "scalekit.v1.members.MemberRole", [
  { no: 0, name: "MEMBER_ROLE_UNSPECIFIED" },
  { no: 1, name: "ADMIN" },
  { no: 2, name: "USER" },
]);

/**
 * @generated from message scalekit.v1.members.Member
 */
export class Member extends Message<Member> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * @generated from field: string workspace_id = 4;
   */
  workspaceId = "";

  /**
   * @generated from field: scalekit.v1.members.MemberRole role = 5;
   */
  role = MemberRole.MEMBER_ROLE_UNSPECIFIED;

  /**
   * @generated from field: optional string first_name = 6;
   */
  firstName?: string;

  /**
   * @generated from field: optional string last_name = 7;
   */
  lastName?: string;

  /**
   * @generated from field: string email = 8;
   */
  email = "";

  /**
   * @generated from field: map<string, string> metadata = 9;
   */
  metadata: { [key: string]: string } = {};

  constructor(data?: PartialMessage<Member>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.Member";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
    { no: 3, name: "update_time", kind: "message", T: Timestamp },
    { no: 4, name: "workspace_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "role", kind: "enum", T: proto3.getEnumType(MemberRole) },
    { no: 6, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Member {
    return new Member().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Member {
    return new Member().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Member {
    return new Member().fromJsonString(jsonString, options);
  }

  static equals(a: Member | PlainMessage<Member> | undefined, b: Member | PlainMessage<Member> | undefined): boolean {
    return proto3.util.equals(Member, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.CreateMemberRequest
 */
export class CreateMemberRequest extends Message<CreateMemberRequest> {
  /**
   * @generated from field: scalekit.v1.members.Member member = 1;
   */
  member?: Member;

  constructor(data?: PartialMessage<CreateMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.CreateMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member", kind: "message", T: Member },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateMemberRequest {
    return new CreateMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateMemberRequest {
    return new CreateMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateMemberRequest {
    return new CreateMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateMemberRequest | PlainMessage<CreateMemberRequest> | undefined, b: CreateMemberRequest | PlainMessage<CreateMemberRequest> | undefined): boolean {
    return proto3.util.equals(CreateMemberRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.CreateMemberResponse
 */
export class CreateMemberResponse extends Message<CreateMemberResponse> {
  /**
   * @generated from field: scalekit.v1.members.Member member = 1;
   */
  member?: Member;

  constructor(data?: PartialMessage<CreateMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.CreateMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member", kind: "message", T: Member },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateMemberResponse {
    return new CreateMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateMemberResponse {
    return new CreateMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateMemberResponse {
    return new CreateMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateMemberResponse | PlainMessage<CreateMemberResponse> | undefined, b: CreateMemberResponse | PlainMessage<CreateMemberResponse> | undefined): boolean {
    return proto3.util.equals(CreateMemberResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.UpdateMember
 */
export class UpdateMember extends Message<UpdateMember> {
  /**
   * @generated from field: optional scalekit.v1.members.MemberRole role = 5;
   */
  role?: MemberRole;

  /**
   * @generated from field: optional string first_name = 6;
   */
  firstName?: string;

  /**
   * @generated from field: optional string last_name = 7;
   */
  lastName?: string;

  /**
   * @generated from field: map<string, string> metadata = 9;
   */
  metadata: { [key: string]: string } = {};

  constructor(data?: PartialMessage<UpdateMember>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.UpdateMember";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "role", kind: "enum", T: proto3.getEnumType(MemberRole), opt: true },
    { no: 6, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMember {
    return new UpdateMember().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMember {
    return new UpdateMember().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMember {
    return new UpdateMember().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMember | PlainMessage<UpdateMember> | undefined, b: UpdateMember | PlainMessage<UpdateMember> | undefined): boolean {
    return proto3.util.equals(UpdateMember, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.UpdateCurrentMemberRequest
 */
export class UpdateCurrentMemberRequest extends Message<UpdateCurrentMemberRequest> {
  /**
   * @generated from field: scalekit.v1.members.UpdateMember member = 1;
   */
  member?: UpdateMember;

  constructor(data?: PartialMessage<UpdateCurrentMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.UpdateCurrentMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member", kind: "message", T: UpdateMember },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCurrentMemberRequest {
    return new UpdateCurrentMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCurrentMemberRequest {
    return new UpdateCurrentMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCurrentMemberRequest {
    return new UpdateCurrentMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCurrentMemberRequest | PlainMessage<UpdateCurrentMemberRequest> | undefined, b: UpdateCurrentMemberRequest | PlainMessage<UpdateCurrentMemberRequest> | undefined): boolean {
    return proto3.util.equals(UpdateCurrentMemberRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.UpdateMemberRequest
 */
export class UpdateMemberRequest extends Message<UpdateMemberRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.members.UpdateMember member = 2;
   */
  member?: UpdateMember;

  constructor(data?: PartialMessage<UpdateMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.UpdateMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "member", kind: "message", T: UpdateMember },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMemberRequest {
    return new UpdateMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMemberRequest {
    return new UpdateMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMemberRequest {
    return new UpdateMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMemberRequest | PlainMessage<UpdateMemberRequest> | undefined, b: UpdateMemberRequest | PlainMessage<UpdateMemberRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMemberRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.UpdateMemberResponse
 */
export class UpdateMemberResponse extends Message<UpdateMemberResponse> {
  /**
   * @generated from field: scalekit.v1.members.Member member = 1;
   */
  member?: Member;

  constructor(data?: PartialMessage<UpdateMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.UpdateMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member", kind: "message", T: Member },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMemberResponse {
    return new UpdateMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMemberResponse {
    return new UpdateMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMemberResponse {
    return new UpdateMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMemberResponse | PlainMessage<UpdateMemberResponse> | undefined, b: UpdateMemberResponse | PlainMessage<UpdateMemberResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMemberResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.GetCurrentMemberRequest
 */
export class GetCurrentMemberRequest extends Message<GetCurrentMemberRequest> {
  constructor(data?: PartialMessage<GetCurrentMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.GetCurrentMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrentMemberRequest {
    return new GetCurrentMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrentMemberRequest {
    return new GetCurrentMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrentMemberRequest {
    return new GetCurrentMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCurrentMemberRequest | PlainMessage<GetCurrentMemberRequest> | undefined, b: GetCurrentMemberRequest | PlainMessage<GetCurrentMemberRequest> | undefined): boolean {
    return proto3.util.equals(GetCurrentMemberRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.GetMemberRequest
 */
export class GetMemberRequest extends Message<GetMemberRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.GetMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMemberRequest {
    return new GetMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMemberRequest {
    return new GetMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMemberRequest {
    return new GetMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMemberRequest | PlainMessage<GetMemberRequest> | undefined, b: GetMemberRequest | PlainMessage<GetMemberRequest> | undefined): boolean {
    return proto3.util.equals(GetMemberRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.GetMemberResponse
 */
export class GetMemberResponse extends Message<GetMemberResponse> {
  /**
   * @generated from field: scalekit.v1.members.Member member = 1;
   */
  member?: Member;

  constructor(data?: PartialMessage<GetMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.GetMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member", kind: "message", T: Member },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMemberResponse {
    return new GetMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMemberResponse {
    return new GetMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMemberResponse {
    return new GetMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMemberResponse | PlainMessage<GetMemberResponse> | undefined, b: GetMemberResponse | PlainMessage<GetMemberResponse> | undefined): boolean {
    return proto3.util.equals(GetMemberResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.ListMemberRequest
 */
export class ListMemberRequest extends Message<ListMemberRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.ListMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMemberRequest {
    return new ListMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMemberRequest {
    return new ListMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMemberRequest {
    return new ListMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMemberRequest | PlainMessage<ListMemberRequest> | undefined, b: ListMemberRequest | PlainMessage<ListMemberRequest> | undefined): boolean {
    return proto3.util.equals(ListMemberRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.ListMemberResponse
 */
export class ListMemberResponse extends Message<ListMemberResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: repeated scalekit.v1.members.Member members = 3;
   */
  members: Member[] = [];

  constructor(data?: PartialMessage<ListMemberResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.ListMemberResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "members", kind: "message", T: Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMemberResponse {
    return new ListMemberResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMemberResponse {
    return new ListMemberResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMemberResponse {
    return new ListMemberResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMemberResponse | PlainMessage<ListMemberResponse> | undefined, b: ListMemberResponse | PlainMessage<ListMemberResponse> | undefined): boolean {
    return proto3.util.equals(ListMemberResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.members.DeleteMemberRequest
 */
export class DeleteMemberRequest extends Message<DeleteMemberRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteMemberRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.members.DeleteMemberRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteMemberRequest {
    return new DeleteMemberRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteMemberRequest {
    return new DeleteMemberRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteMemberRequest {
    return new DeleteMemberRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteMemberRequest | PlainMessage<DeleteMemberRequest> | undefined, b: DeleteMemberRequest | PlainMessage<DeleteMemberRequest> | undefined): boolean {
    return proto3.util.equals(DeleteMemberRequest, a, b);
  }
}

